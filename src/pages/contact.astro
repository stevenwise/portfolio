---
import Layout from '../layouts/Layout.astro';

const socialLinks = [
  {
    name: 'LinkedIn',
    url: 'https://www.linkedin.com/in/stevenwiseux/',
    icon: `<svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
      <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
    </svg>`
  }
];
---

<Layout title="Contact | Steven Wise">
  <main class="max-w-7xl mx-auto px-6">
    <div class="pt-32 pb-24">
      <h1 class="text-[72px] font-montserrat font-bold text-gray-900 mb-12">Contact</h1>
      
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-16">
        <!-- Contact Details -->
        <div>
          <h2 class="text-3xl font-montserrat font-bold text-gray-900 mb-6">Get in touch</h2>
          <p class="text-xl text-gray-600 mb-8">I'm always interested in discussing new opportunities and collaborations.</p>
          
          <div class="space-y-6">
            <div>
              <h3 class="text-xl font-montserrat font-semibold text-gray-900 mb-2">Email</h3>
              <a 
                href="mailto:hello@stevenwise.co.uk"
                class="text-xl text-gray-600 hover:text-gray-900 underline decoration-2 underline-offset-4 focus:outline-none focus:bg-yellow-300 focus:box-decoration-clone focus:border-b-4 focus:border-black active:bg-yellow-300 active:box-decoration-clone active:border-b-4 active:border-black"
              >
                hello@stevenwise.co.uk
              </a>
            </div>

            <div>
              <h3 class="text-xl font-montserrat font-semibold text-gray-900 mb-2">Social</h3>
              <ul class="flex gap-4">
                {socialLinks.map(link => (
                  <li>
                    <a
                      href={link.url}
                      class="inline-flex items-center gap-2 text-gray-600 hover:text-gray-900 focus:outline-none focus:ring-4 focus:ring-yellow-300 rounded-full p-2"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      <span class="sr-only">Follow on {link.name}</span>
                      <Fragment set:html={link.icon} />
                    </a>
                  </li>
                ))}
              </ul>
            </div>
          </div>
        </div>

        <!-- Contact Form -->
        <div>
          <h2 class="text-3xl font-montserrat font-bold text-gray-900 mb-6">Send a message</h2>
          <form 
            action="/api/contact" 
            method="POST"
            class="space-y-6"
            novalidate
          >
            <div>
              <label 
                for="name"
                class="block text-xl font-medium text-gray-900 mb-1"
              >
                Name
                <span class="sr-only">(required)</span>
              </label>
              <div id="name-error" class="mb-2 text-red-600 text-lg hidden">Please enter your name</div>
              <input
                type="text"
                id="name"
                name="name"
                required
                aria-required="true"
                class="w-full px-4 py-3 text-xl rounded-lg border border-gray-300 focus:outline-none focus:ring-4 focus:ring-yellow-300 focus:border-gray-900"
                aria-describedby="name-error"
              />
            </div>

            <div>
              <label 
                for="email"
                class="block text-xl font-medium text-gray-900 mb-1"
              >
                Email address
                <span class="sr-only">(required)</span>
              </label>
              <div id="email-error" class="mb-2 text-red-600 text-lg hidden">Please enter a valid email address</div>
              <input
                type="email"
                id="email"
                name="email"
                required
                aria-required="true"
                class="w-full px-4 py-3 text-xl rounded-lg border border-gray-300 focus:outline-none focus:ring-4 focus:ring-yellow-300 focus:border-gray-900"
                aria-describedby="email-error"
              />
            </div>

            <div>
              <label 
                for="message"
                class="block text-xl font-medium text-gray-900 mb-1"
              >
                Message
                <span class="sr-only">(required)</span>
              </label>
              <div id="message-error" class="mb-2 text-red-600 text-lg hidden">Please enter your message</div>
              <textarea
                id="message"
                name="message"
                required
                aria-required="true"
                rows="6"
                class="w-full px-4 py-3 text-xl rounded-lg border border-gray-300 focus:outline-none focus:ring-4 focus:ring-yellow-300 focus:border-gray-900 resize-y"
                aria-describedby="message-error"
              ></textarea>
            </div>

            <button
              type="submit"
              class="inline-flex justify-center items-center px-8 py-4 text-xl font-medium text-white bg-gray-900 rounded-lg hover:bg-gray-800 focus:outline-none focus:ring-4 focus:ring-yellow-300"
            >
              Send message
            </button>
          </form>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  const form = document.querySelector('form');
  const inputs = form?.querySelectorAll('input, textarea');

  inputs?.forEach(input => {
    // Show error message when input is invalid
    input.addEventListener('invalid', (e) => {
      e.preventDefault();
      const errorEl = document.getElementById(`${input.id}-error`);
      if (errorEl) {
        errorEl.classList.remove('hidden');
      }
    });

    // Hide error message when input changes
    input.addEventListener('input', () => {
      const errorEl = document.getElementById(`${input.id}-error`);
      if (errorEl) {
        errorEl.classList.add('hidden');
      }
    });
  });

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    // Client-side validation
    const isValid = form.checkValidity();
    if (!isValid) {
      return;
    }

    const formData = new FormData(form);
    const data = Object.fromEntries(formData);

    try {
      const response = await fetch(form.action, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      if (response.ok) {
        // Reset form and show success message
        form.reset();
        alert('Message sent successfully!');
      } else {
        throw new Error('Failed to send message');
      }
    } catch (error) {
      alert('Failed to send message. Please try again later.');
    }
  });
</script>