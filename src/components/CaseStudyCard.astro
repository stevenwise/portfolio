---
interface Props {
  title: string;
  organization: string;
  image: string;
  href: string;
  imagePosition: 'left' | 'right';
  tags: string[];
}

const { title, organization, image, href, imagePosition, tags } = Astro.props;
---

<article class="block mb-8">
  <div class={`grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-16 items-start ${imagePosition === 'right' ? 'md:grid-flow-dense' : ''}`}>
    <a 
      href={href} 
      tabindex="-1" 
      aria-hidden="true"
      class={`block bg-gray-100 overflow-hidden ${imagePosition === 'right' ? 'md:col-start-2' : ''}`}
    >
      <div class="relative w-full pt-[100%]">
        <img 
          src={image} 
          alt=""
          loading="lazy"
          decoding="async"
          class="absolute inset-0 w-full h-full object-cover transition-transform duration-300 hover:scale-105"
        />
      </div>
    </a>
    <div class={`pt-1 md:pt-20 ${imagePosition === 'right' ? 'md:col-start-1' : ''}`}>
      <a 
        href={href} 
        class="group inline-block focus:outline-none mb-4"
      >
        <h3 class="inline text-2xl md:text-3xl lg:text-[32px] leading-[120%] font-montserrat font-bold text-gray-900 [&:not(:active)]:hover:underline decoration-2 underline-offset-8 group-focus-visible:box-decoration-clone group-focus-visible:bg-yellow-300 group-focus-visible:no-underline group-focus-visible:border-b-4 group-focus-visible:border-black group-active:bg-yellow-300 group-active:box-decoration-clone group-active:border-b-4 group-active:border-black">
          {title}
        </h3>
      </a>
      <p class="text-base md:text-lg text-gray-600 mb-4">{organization}</p>
      <div class="flex gap-2">
        {tags.map(tag => (
          <span class="inline-block px-3 py-1 text-sm font-medium text-gray-900 bg-gray-200 rounded">
            {tag}
          </span>
        ))}
      </div>
    </div>
  </div>
</article>